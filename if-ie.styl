// set the `ie` variable so you'll need only to set it to `true` in `ie.` files
ie ?= false


// Method to use a `{lte_ie9}` selector to make styles for either old ie, or for prefixed ie9 class
ie9_class ?= 'ie9' // set the `ie9_class` in your .styl if you need another class here
lte_ie9 = ie ? '' : '.' + ie9_class + ' '

// Block mixin wrapper for lte-ie9
lte-ie9()
  {lte_ie9}
    {block}


// Handy `zoom`, would be visible only for IE
zoom()
  zoom: arguments if ie


// `inline-block` for IE
// Making it so it won't override previous overrides of `display`
display_previous = display if !display_previous && type(display) == "function"

display(type, args...)
  if type == inline-block and ie
    display: inline args
    zoom: 1
  else
    if type(display_previous) == "function"
      display_previous(arguments)
    else
      display: arguments


// Emulating `box-sizing` in IE
// Could be used only in the same block and after all other box-model props
// Also, only paddings for now, no borders
box-sizing_previous = box-sizing if !box-sizing_previous && type(box-sizing) == "function"

box-sizing(type, args...)
  if ie and @padding and (@width or @height)
    $padding = @padding
    $minus_width = 0
    $minus_height = 0

    if length($padding) == 1
      $minus_width = $padding*2
      $minus_height = $padding*2
    else if length($padding) == 2
      $minus_width = $padding[1]*2
      $minus_height = $padding[0]*2
    else if length($padding) == 3
      $minus_width = $padding[1]*2
    else if length($padding) == 4
      $minus_width = $padding[1] + $padding[3] unless (unit($padding[1]) != unit($padding[3]) and $padding[1] > 0 and $padding[3] > 0)
    if length($padding) > 2
      $minus_height = $padding[0] + $padding[2] unless (unit($padding[0]) != unit($padding[2]) and $padding[0] > 0 and $padding[2] > 0)

    if @width and unit(@width) == unit($minus_width)
      width: @width - $minus_width
    if @height and unit(@height) == unit($minus_height)
      height: @height - $minus_height

  else if ie
    z if 0 // Do nothing in IE, details in the last section

  else
    if type(box-sizing_previous) == "function"
      box-sizing_previous(arguments)
    else
      box-sizing: arguments


// rgba-like function with an optional fallback (defaults to #FFF)
$default_rgba_fallback ?= #FFF
rgba-ie()
  // Proxy for passing the arguments to `rgba`
  // See https://github.com/LearnBoost/stylus/issues/803
  rgba-proxy()
    return rgba(arguments) if length(arguments) == 1
    return rgba(arguments[0],arguments[1]) if length(arguments) == 2
    return rgba(arguments[0],arguments[1],arguments[2]) if length(arguments) == 3 // In case there'd be such case
    return rgba(arguments[0],arguments[1],arguments[2],arguments[3]) if length(arguments) == 4

  // Getting the fallback from the arguments
  if length(arguments) > 1 && type(arguments[length(arguments) - 1]) == "rgba"
    $fallback = pop(arguments)
  else
    $fallback = $default_rgba_fallback

  // Return rgba as soon as possible when not in IE
  return rgba-proxy(arguments) if !ie

  // Basic color blending
  blend(color1,color2)
    // Only normal blending here for now
    return color2 if alpha(color2) == 1
    return color1 if alpha(color2) == 0
    newR = (1 - alpha(color2)) *   red(color1) + alpha(color2) *   red(color2)
    newG = (1 - alpha(color2)) * green(color1) + alpha(color2) * green(color2)
    newB = (1 - alpha(color2)) *  blue(color1) + alpha(color2) *  blue(color2)
    newA = 1 // FIXME: would be smth different if the alpha of color1 != 1
    return rgba(newR,newG,newB,newA)

  // We can have a contrasting function or take a function as the last argument
  if $fallback == 'contrasting' and type(contrasting) == 'function'
    $fallback = contrasting(rgba-proxy(arguments))
  else if type($fallback) == 'function'
    $fallback = $fallback(rgba-proxy(arguments))

  // If we still don't have a color as a fallback, ok, white
  if type($fallback) != 'rgba'
    $fallback = #FFF

  // If the fallback is transparent, it shouldn't be
  if alpha($fallback) < 1
    if $fallback != $default_rgba_fallback and type($default_rgba_fallback == 'rgba')
      $fallback = rgba-ie($fallback)
    else
      $fallback = rgba-ie($fallback, #FFF)

  return blend($fallback, rgba-proxy(arguments))


// Crossbrowser `rect()` for `clip` property
rect()
  return 'rect(%s)' % unquote(join(ie?' ':',', arguments))


// Simple nth-child helper for IE
// Inspired by http://codepen.io/scottkellum/pen/isytK
// No handling of `2n` and `2n + 1` like functions (yet?)
nth-child(selector, number, offset = 0)
  if ie and number[1] != n // second check don't throw away the rule, need to find better way.
    a = ':first-child'
    if number == 1
      return unquote(selector) + a
    for i in (2..number)
      a = a + ' + ' if i == 2
      a = a + '* + ' if i > 2
    return a + unquote(selector)
  else
    return '%s:nth-child(%s)' % (unquote(selector) unquote(join('',number)))


// Disabling vendor functions in IE, saving bytes.
// Would work only if `ie` variable would be set _before_ including if-ie.styl`.
//   `z if 0` â€” shortest non-buggy thing there. Kust empty comment is buggy :(
if ie
  border-radius()
    z if 0 // Do nothing in IE
  text-shadow()
    z if 0 // Do nothing in IE
  box-shadow()
    z if 0 // Do nothing in IE
  user-select()
    z if 0 // Do nothing in IE
  column-count()
    z if 0 // Do nothing in IE
  column-gap()
    z if 0 // Do nothing in IE
  column-rule()
    z if 0 // Do nothing in IE
  column-rule-color()
    z if 0 // Do nothing in IE
  column-rule-width()
    z if 0 // Do nothing in IE
  column-rule-style()
    z if 0 // Do nothing in IE
  column-width()
    z if 0 // Do nothing in IE
  column-span()
    z if 0 // Do nothing in IE
  column-fill()
    z if 0 // Do nothing in IE
  background-clip()
    z if 0 // Do nothing in IE
  background-origin()
    z if 0 // Do nothing in IE
  background-size()
    z if 0 // Do nothing in IE
  transform()
    z if 0 // Do nothing in IE
  transform-style()
    z if 0 // Do nothing in IE
  border-image()
    z if 0 // Do nothing in IE
  transition()
    z if 0 // Do nothing in IE
  transition-property()
    z if 0 // Do nothing in IE
  transition-duration()
    z if 0 // Do nothing in IE
  transition-timing-function()
    z if 0 // Do nothing in IE
  transition-delay()
    z if 0 // Do nothing in IE
  backface-visibility()
    z if 0 // Do nothing in IE
  perspective()
    z if 0 // Do nothing in IE
  perspective-origin()
    z if 0 // Do nothing in IE
  text-size-adjust()
    z if 0 // Do nothing in IE
  box-orient()
    z if 0 // Do nothing in IE
  box-flex()
    z if 0 // Do nothing in IE
  box-flex-group()
    z if 0 // Do nothing in IE
  box-ordinal-group()
    z if 0 // Do nothing in IE
  box-align()
    z if 0 // Do nothing in IE
  box-pack()
    z if 0 // Do nothing in IE
  box-direction()
    z if 0 // Do nothing in IE
  animation()
    z if 0 // Do nothing in IE
  animation-name()
    z if 0 // Do nothing in IE
  animation-duration()
    z if 0 // Do nothing in IE
  animation-delay()
    z if 0 // Do nothing in IE
  animation-direction()
    z if 0 // Do nothing in IE
  animation-iteration-count()
    z if 0 // Do nothing in IE
  animation-timing-function()
    z if 0 // Do nothing in IE
  animation-play-state()
    z if 0 // Do nothing in IE
  animation-fill-mode()
    z if 0 // Do nothing in IE
  hyphens()
    z if 0 // Do nothing in IE
  appearance()
    z if 0 // Do nothing in IE
  tab-size()
    z if 0 // Do nothing in IE
  overflow-scrolling()
    z if 0 // Do nothing in IE
  text-size-adjust()
    z if 0 // Do nothing in IE
